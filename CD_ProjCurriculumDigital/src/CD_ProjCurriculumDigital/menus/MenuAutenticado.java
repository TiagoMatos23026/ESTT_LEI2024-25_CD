/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CD_ProjCurriculumDigital.menus;

import CD_ProjCurriculumDigital.classes.Block;
import CD_ProjCurriculumDigital.classes.CurriculumDigital;
import CD_ProjCurriculumDigital.classes.Evento;
import CD_ProjCurriculumDigital.classes.Hash;
import CD_ProjCurriculumDigital.classes.InterfaceRemota;
import CD_ProjCurriculumDigital.classes.MerkleTree;
import CD_ProjCurriculumDigital.classes.MinerConcurrent;
import CD_ProjCurriculumDigital.classes.ObjetoRemoto;
import CD_ProjCurriculumDigital.classes.User;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.rmi.Naming;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author asus
 */
public class MenuAutenticado extends javax.swing.JFrame {
    ObjetoRemoto myremoteObject;
    //cria um novo objeto que referencia o ficheiro com a blockchain
    public static String fileCurriculumDigital = "curriculumDigital.obj";
    //cria um objeto do tipo CurriculumDigital
    CurriculumDigital curriculo;

    DefaultListModel model = new DefaultListModel();

    //inicializa myUser
    User myUser = null;
    //criar um objeto merkle tree
    MerkleTree merkleTree;
    
    String address = null;

    int difficulty;

    public MenuAutenticado() {
        initComponents();

        try {
            //construir objeto
            curriculo = new CurriculumDigital();
            curriculo = CurriculumDigital.load(fileCurriculumDigital);

            //construir objeto merkletree
            merkleTree = new MerkleTree();

            //cria um list model com os elementos da blockchain
            DefaultListModel model = new DefaultListModel();
            int i = 0;
            for (Block elem : curriculo.getChain()) {
                model.addElement("Bloco " + i + " (Dificuldade: " + elem.getDiff() + ")");
                i++;
            }

            listaBlocos.setModel(model);

            /*listaBlocos.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent evt) {
                    if (!evt.getValueIsAdjusting()) { // Evitar ação dupla
                        String selectedBlock = listaBlocos.getSelectedValue();
                        if (selectedBlock != null) {
                            
                            atualizarListaElementosBloco(selectedBlock);
                        }
                    }
                }
            });*/
        } catch (Exception e) {
        }

        setSize(800, 600);
        setLocationRelativeTo(null);
    }

    //constrói interface com o user recebido (entidade)
    public MenuAutenticado(User u, String addr) {

        this();
        this.address = addr;
        this.myUser = u;
        this.txtEntidade.setText(u.getName());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtVerCurriculos = new javax.swing.JTextArea();
        btnVerCurriculos = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCC = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtEvento = new javax.swing.JTextArea();
        btnRegistar = new javax.swing.JButton();
        txtEntidade = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDiff = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        minedBlock = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaBlocos = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtVerCurriculos.setEditable(false);
        txtVerCurriculos.setColumns(20);
        txtVerCurriculos.setRows(5);
        jScrollPane4.setViewportView(txtVerCurriculos);

        btnVerCurriculos.setText("Ver todos os Currículos");
        btnVerCurriculos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerCurriculosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVerCurriculos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerCurriculos, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Ver Currículos", jPanel6);

        jLabel2.setText("Eventos");

        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome Completo:");

        jLabel4.setText("Número de Identificação Civil:");

        txtEvento.setColumns(20);
        txtEvento.setRows(5);
        jScrollPane2.setViewportView(txtEvento);

        btnRegistar.setText("Registar Eventos Curriculares");
        btnRegistar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistarActionPerformed(evt);
            }
        });

        txtEntidade.setEditable(false);
        txtEntidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntidadeActionPerformed(evt);
            }
        });

        jLabel5.setText("Dificuldade");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                    .addComponent(txtUser)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCC)
                    .addComponent(txtEntidade)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(284, Short.MAX_VALUE))
                    .addComponent(btnRegistar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDiff)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDiff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Adicionar Evento Curricular", jPanel5);

        jLabel1.setText("Blocos");

        jButton1.setText("Minerar Bloco");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        minedBlock.setColumns(32);
        minedBlock.setRows(5);
        jScrollPane5.setViewportView(minedBlock);

        listaBlocos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(listaBlocos);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void btnRegistarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistarActionPerformed
        /*try {
            //cria o evento com o user
            Evento e = new Evento(
                    myUser,
                    txtEvento.getText()
            );

            curriculo.add(e);

            curriculo.save(fileCurriculumDigital);

            DefaultListModel<String> listModel = new DefaultListModel<>();

            // Obter a lista de strings do currículo
            List<String> eventos = curriculo.getCurriculoAsStrings(myUser.getCC());

            // Adicionar os eventos ao modelo da lista
            for (String evento : eventos) {
                listModel.addElement(evento);
            }

            // Definir o modelo no componente listaCurriculo

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "erro a registar evento");
            Logger.getLogger(MenuAutenticado.class.getName()).log(Level.SEVERE, null, ex);
        }*/

        new Thread(() -> {
            btnRegistar.setEnabled(false);
            
            try {
                try {
                    int diff = Integer.parseInt(txtDiff.getText()); // tenta converter o texto para inteiro
                    if (diff < 1 || diff > 8) { // verifica se o valor está fora do intervalo de 1 a 8
                        JOptionPane.showMessageDialog(null, "Número inválido. Por favor, insira um número entre 1 e 8.", "Erro", JOptionPane.ERROR_MESSAGE);
                    } else {
                        difficulty = diff;
                    }
                } catch (NumberFormatException e) {
                    // Caso o texto não seja um número (ex. letras ou símbolos)
                    JOptionPane.showMessageDialog(null, "Entrada inválida. Por favor, insira um número entre 1 e 8.", "Erro", JOptionPane.ERROR_MESSAGE);
                }

                ArrayList<Evento> EventosList = new ArrayList();
                String[] elements = txtEvento.getText().split("\\n");

                for (String element : elements) {

                    String nome = txtUser.getText();
                    String cc = txtCC.getText();
                    String evento = element;
                    Evento e = new Evento(
                            nome,
                            cc,
                            evento
                    );
                    EventosList.add(e);
                    curriculo.addEvento(e);
                }

                MerkleTree mt = new MerkleTree(elements);

                curriculo.add(mt.getRoot(), difficulty);
                curriculo.save(fileCurriculumDigital);

                mt.saveToFile(curriculo.getLastBlockHash() + ".mkt");

                DefaultListModel model = new DefaultListModel();
                int i = 0;
                for (Block elem : curriculo.getChain()) {
                    model.addElement("Bloco " + i + " (Dificuldade: " + elem.getDiff() + ")");
                    i++;
                }

                SwingUtilities.invokeLater(() -> {

                    listaBlocos.setModel(model);
                    btnRegistar.setEnabled(true);
                });

            } catch (Exception ex) {
                Logger.getLogger(MenuAutenticado.class.getName()).log(Level.SEVERE, null, ex);
            }

        }).start();


    }//GEN-LAST:event_btnRegistarActionPerformed

    private void btnVerCurriculosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerCurriculosActionPerformed
        btnVerCurriculos.setEnabled(false);
        new Thread(() -> {
            try {
                
                InterfaceRemota myremoteObject = (InterfaceRemota) Naming.lookup(address);
                List<Evento> curriculos = myremoteObject.getCurriculos();
                
                String s = "";

                for (Evento evento : curriculos) {
                    s = s.concat(evento.toString() + "\n");
                    final String f = s;

                    SwingUtilities.invokeLater(() -> {
                        txtVerCurriculos.setText(f);
                        btnVerCurriculos.setEnabled(true);
                    });
                }

            } catch (Exception ex) {
                Logger.getLogger(MenuAutenticado.class.getName()).log(Level.SEVERE, null, ex);
            }

        }).start();

    }//GEN-LAST:event_btnVerCurriculosActionPerformed

    private void txtEntidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEntidadeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jButton1.setEnabled(false);

        new Thread(() -> {

            String[] blocoSelect = listaBlocos.getSelectedValue().split(" ");

            final Block b = curriculo.getChain().get(Integer.parseInt(blocoSelect[1]));

            final int diff = b.getDiff();
            
            String msg = atualizarListaElementosBloco(b,diff);

            SwingUtilities.invokeLater(() -> {
         
                minedBlock.setText(msg);
                jButton1.setEnabled(true);
                
            });

        }).start();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    private String atualizarListaElementosBloco(Block b, int diff) {
        String msg = b.getPreviousHash() + b.getData();
        int nonce = MinerConcurrent.getNonce(msg, b.getDiff());

        DefaultListModel model = new DefaultListModel();

        return ("Hash: " + Hash.getHash(nonce + msg));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistar;
    private javax.swing.JButton btnVerCurriculos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JList<String> listaBlocos;
    private javax.swing.JTextArea minedBlock;
    private javax.swing.JTextField txtCC;
    private javax.swing.JTextField txtDiff;
    private javax.swing.JTextField txtEntidade;
    private javax.swing.JTextArea txtEvento;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextArea txtVerCurriculos;
    // End of variables declaration//GEN-END:variables
}
